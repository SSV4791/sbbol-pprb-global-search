<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true" scanPeriod="30 seconds">
    <property name="loggingDir" value="build/logs"/>
    <property name="loggingFile" value="application.log"/>
    <property name="loggingJSONFile" value="application.log.json"/>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${loggingDir}/${loggingFile}</file>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{ISO8601} [%t] [%level] \(%c\) [%C::%M:%L] mdc:\(%mdc\)| %m%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${loggingDir}/${loggingFile}_%d{yyyy-MM-dd}_%i.zip</fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>5</maxHistory>
            <totalSizeCap>50MB</totalSizeCap>
        </rollingPolicy>
    </appender>
    <appender name="JSON" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${loggingDir}/${loggingJSONFile}</file>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <fieldName>timestamp</fieldName>
                    <pattern>[UNIX_TIMESTAMP_AS_STRING]</pattern>
                </timestamp>
                <logLevel>
                    <fieldName>levelStr</fieldName>
                </logLevel>
                <logLevelValue>
                    <fieldName>levelInt</fieldName>
                </logLevelValue>
                <loggerName>
                    <fieldName>loggerName</fieldName>
                </loggerName>
                <threadName>
                    <fieldName>threadName</fieldName>
                </threadName>
                <callerData>
                    <classFieldName>callerClass</classFieldName>
                    <methodFieldName>callerMethod</methodFieldName>
                    <lineFieldName>callerLine</lineFieldName>
                    <fileFieldName>callerFile</fileFieldName>
                </callerData>
                <message/>
                <stackTrace>
                    <fieldName>stackTrace</fieldName>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <maxLength>4096</maxLength>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
                <pattern>
                    <omitEmptyFields>true</omitEmptyFields>
                    <pattern>
                        {
                        "requestUid": "%mdc{requestUid}",
                        "requestDepth": "#asLong{%mdc{requestDepth}}",
                        "sessionUid": "%mdc{sessionUid}",
                        "sessionLogin": "%mdc{sessionLogin}"
                        }
                    </pattern>
                </pattern>
                <nestedField>
                    <fieldName>mdc</fieldName>
                    <providers>
                        <mdc>
                            <excludeMdcKeyName>requestUid</excludeMdcKeyName>
                            <excludeMdcKeyName>requestDepth</excludeMdcKeyName>
                            <excludeMdcKeyName>sessionUid</excludeMdcKeyName>
                            <excludeMdcKeyName>sessionLogin</excludeMdcKeyName>
                        </mdc>
                    </providers>
                </nestedField>
            </providers>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${loggingDir}/${loggingJSONFile}_%d{yyyy-MM-dd}_%i.zip</fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>5</maxHistory>
            <totalSizeCap>50MB</totalSizeCap>
        </rollingPolicy>
    </appender>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{ISO8601} [%t] [%level] \(%c\) [%C::%M:%L] mdc:\(%mdc\)| %m%n</pattern>
        </encoder>
    </appender>
    <root level="info">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="JSON"/>
    </root>
    <logger name="ru.sberbank.pprb.sbbol.draft" level="DEBUG"/>
</configuration>